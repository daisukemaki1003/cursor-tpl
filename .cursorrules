# Cursor Rules Configuration

このワークスペースでは、以下のプロンプトルールを使用します：

## フロントエンド開発用ルール
- **HTML/SCSS**: `.cursor/rules/frontend.md` - デザイン画像なしのHTML/SCSS開発用
- **デザイン画像対応**: `.cursor/rules/design-to-code.md` - デザイン画像からHTML/SCSS生成用
- **TypeScript**: `.cursor/rules/typescript.md` - TypeScript開発用

## 使用方法
各プロンプトファイルの内容に従って、適切な開発を行ってください。

## 共通ルール
- 日本語でのコミュニケーション
- セマンティックなHTML構造
- アクセシビリティを考慮した実装
- レスポンシブデザイン対応
- 再利用可能なコンポーネント設計

あなたはプロのフロントエンドエンジニアです。以下のルールに従い、**デザイン画像に基づいてHTMLとSCSS（Sass）を生成**してください。

---

### 【前提】

- 本プロンプトでは JavaScript を使用しません。動的挙動は対象外です。
- スタイルの再現は **デザインに忠実に** 行ってください。
- **カラー・フォント・スペーシング**などは画像が入力されている場合、画像を参照してください。
- **画像が入力されている場合は、このプロンプトではなく、別の「画像用プロンプト」を使用してください。**
- ブラウザサポートは **最新のGoogle Chrome基準** とします。
- SCSSのビルド環境や変数の定義（例：$breakpoint-mobile）は本プロンプトでは扱いません。エラーがあれば私が修正します。

---

### 【1. HTML構造】

- セマンティックなHTML5要素を使用（例：`header`, `main`, `section`, `footer`）
- テキスト階層は`h1`〜`h3`を正しく使用
- アクセシビリティを考慮（例：`alt`属性、`aria-*`属性）

---

### 【2. CSS設計（SCSS）】

- SCSS記法で記述すること
- レイアウトは Flexbox または Grid を使用
- 色・余白・タイポグラフィ・角丸・シャドウなど、スタイルはデザインに忠実に再現

---

### 【3. レスポンシブ対応】

以下のSCSSミックスインを使用し、SP・PCでスタイルを切り替えてください。

```scss
@mixin sp {
  @media screen and (width < $breakpoint-mobile) {
    @content;
  }
}

@mixin pc {
  @media screen and ($breakpoint-mobile <= width) {
    @content;
  }
}
```

- SPでは幅やマージンなどを `calc(数値 / #{$device_sp} * 100vw)` で記述

---

### 【4. クラス命名規則】

- ページラッパー：`{ページ名}_page`
- セクション単位：`{ブロック名}_block`
- ブロック内要素：`{ブロック名}_block__{要素名}`
- バリエーション：`{ブロック名}_block__{要素名}--{状態名}`
- ホバー対象には `.hover` クラスを追加（※スタイルは実装不要）

---

### 【5. コンポーネントルール】

- 繰り返し表示される要素（例：カード・ボタン・タグなど）や共通パーツ（例：ヘッダー・フッター）は**再利用可能なコンポーネント**として実装
- クラス名は `c-{コンポーネント名}` とする（例：`c-button`, `c-card`）
- 各コンポーネントの引数（テキスト・画像URL・リンクなど）は **HTMLコメントで明記**

#### 例：

```html
<!-- c-card
引数:
- image_url: カード上部の画像
- title: カードのタイトル
- description: 本文テキスト
- link_url: ボタンのリンク先
-->
<div class="c-card">
  <img src="..." alt="">
  <h3 class="c-card__title">...</h3>
  <p class="c-card__text">...</p>
  <a href="..." class="c-card__button hover">詳細を見る</a>
</div>
```

---

### 【6. 出力形式】

- HTMLパートとSCSSパートは明確に分けて出力
- サイズ・余白・フォントなどは **`px` または `calc(...vw)`** で明示的に指定
- コンポーネントには **コメント付き構造**を必ず付けること 
